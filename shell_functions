mckd() {
    mkdir -p "$1" && cd "$1"
}

gstat() {
    echo "=== Git Status ==="
    git status -s
    echo ""
    echo "=== Current Branch ==="
    git branch --show-current
    echo ""
    echo "=== Recent Commits ==="
    git log --oneline -5
}

devstart() {
    echo "Starting development environment..."
    cd ~/Work/rei-auto-pilot || { echo "Project directory not found!"; return 1; }

    if ! docker info >/dev/null 2>&1; then
        echo "Docker daemon not running. Starting Docker Desktop..."
        
        systemctl --user start docker-desktop
        
        echo "Waiting for Docker daemon to start..."
        local timeout=60
        local count=0
        while ! docker info >/dev/null 2>&1; do
            if [ $count -ge $timeout ]; then
                echo "❌ Timeout waiting for Docker daemon to start"
                echo "Try manually running: systemctl --user start docker-desktop"
                return 1
            fi
            sleep 2
            count=$((count + 2))
            printf "."
        done
        echo " ✅ Docker daemon ready!"
    fi

    echo "🚀 Starting containers..."
    docker compose up --build -d

    sleep 5

    if [ -n "$TMUX" ]; then
        tmux split-window -c "~/Work/rei-auto-pilot" \; \
        send-keys "cd ~/Work/rei-auto-pilot && docker compose logs -f" Enter
    else
        gnome-terminal --tab --title="Docker Logs" -- bash -c "
            cd ~/Work/rei-auto-pilot
            docker compose logs -f
        " &
    fi

    sleep 5
    code . &
    google-chrome http://127.0.0.1:5678 &
    telegram-desktop &
    echo "Development environment ready!"
}

devend() {
    echo "Shutting docker down..."
    
    docker compose down
}

sysinfo() {
    echo "=========================="
    echo "    SYSTEM INFORMATION    "
    echo "=========================="

    echo ""
    echo "=== SYSTEM ==="
    echo "Hostname: $(hostname)"
    echo "OS: $(lsb_release -d | cut -f2)"
    echo "Kernel: $(uname -r)"
    echo "Uptime: $(uptime -p)"

    echo ""
    echo "=== CPU ==="
    echo "Processor: $(lscpu | grep 'Model name' | cut -d':' -f2 | xargs)"
    echo "Cores: $(nproc)"
    echo "Load Average: $(uptime | cut -d',' -f3-5 | cut -d':' -f2)"

    echo ""
    echo "=== MEMORY ==="
    free --mega

    echo ""
    echo "=== DISK USAGE ==="
    df -h | grep -E '^dev/'

    echo ""
    echo "=== NETWORK ==="
    echo "IP Address: $(hostname -I | awk '{print $1}')"
    echo "External IP: $(curl -s ifconfig.me)"

    echo ""
    echo "=== TOP PROCESSES (CPU) ==="
    ps aux --sort=-%cpu | head -6
    
    echo ""
    echo "=== TOP PROCESSES (MEMORY) ==="
    ps aux --sort=-%mem | head -6
    
    echo ""
    echo "=== DOCKER (if running) ==="
    if command -v docker &> /dev/null; then
        docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" 2>/dev/null || echo "Docker not running"
    else
        echo "Docker not installed"
    fi
    
    echo ""
    echo "=== LISTENING PORTS ==="
    ss -tuln | grep LISTEN | head -10
}

note() {
    local note_file="$HOME/notes/$(date +%Y-%m-%d).md"
    mkdir -p "$HOME/notes"

    if [ -z "$1" ]; then
        code "$note_file"
    else
        echo "$(date +%H:%M) - $*" >> "$note_file"
        echo "Note added to $(basename "$note_file")"
    fi
}
